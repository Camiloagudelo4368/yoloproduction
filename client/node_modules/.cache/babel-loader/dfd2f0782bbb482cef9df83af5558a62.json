{"ast":null,"code":"import _toConsumableArray from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/camilo/Columbia/YOLO/client/src/components/ByCaloriesSearch/index.js\";\n// import React, { useState, useEffect } from 'react'\nimport React, { Component } from 'react';\nimport './style.css';\nimport googleInfo from \"../../utils/google\";\nimport Restaurants from '../Restaurants';\nimport MultiSelect from '../MultiSelect';\nimport SearchButton from '../SearchButton';\nimport InputCalories from '../InputCalories';\nimport FoodItemModal from '../FoodItemModal';\nimport Map from '../Map';\nimport API from '../../utils/API';\nimport axios from 'axios';\n\nvar ByCaloriesSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ByCaloriesSearch, _Component);\n\n  function ByCaloriesSearch(props) {\n    var _this;\n\n    _classCallCheck(this, ByCaloriesSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ByCaloriesSearch).call(this, props));\n\n    _this.modalClose = function () {\n      return _this.setState({\n        modalShow: false\n      });\n    };\n\n    _this.handleSearchClick = _this.handleSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeSelect = _this.onChangeSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOnChangeCalories = _this.handleOnChangeCalories.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.locationClick = _this.locationClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.locationChange = _this.locationChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.locationSearchClick = _this.locationSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showPosition = _this.showPosition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLocation = _this.getLocation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.locationSearchClick = _this.locationSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.itemDetailsClick = _this.itemDetailsClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.modalClose = _this.modalClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modalShow: false,\n      restaurants: [],\n      foodInfo: {},\n      querySearch: \"\",\n      calories: 0,\n      location: '',\n      currentLocation: '',\n      locationUrl: \"https://www.google.com/maps/embed/v1/place?q=NY&key=\".concat(googleInfo.key),\n      myPlace: [{\n        lat: 40.7127753,\n        lng: -74.0059728,\n        name: 'New York',\n        zoom: 12\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ByCaloriesSearch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        restaurants: [],\n        querySearch: '',\n        calories: 0\n      });\n    }\n  }, {\n    key: \"handleSearchClick\",\n    value: function handleSearchClick(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var that = this;\n      console.log('restaurantObject', this.state);\n      API.getRestaurants(this.state.myPlace[0].lat, this.state.myPlace[0].lng).then(function (arr) {\n        console.log(\"array\", arr);\n        var brandIdList = arr.data.locations.map(function (location) {\n          return location.brand_id;\n        });\n        var restaurantList = arr.data.locations.map(function (location) {\n          return {\n            brand_id: location.brand_id,\n            lat: location.lat,\n            lng: location.lng\n          };\n        });\n        console.log(\"Object\", brandIdList);\n        console.log(\"restaurantList\", restaurantList);\n        API.getRestaurantsByBrandId(brandIdList, _this2.state.querySearch).then(function (result) {\n          console.log(\"Result\", result); // Filter array by calories entered by the user\n\n          var newArray = result.data.branded.filter(function (item) {\n            return item.nf_calories >= _this2.state.calories - 200 && item.nf_calories <= _this2.state.calories;\n          }); // //////////////////////////////////// //////////////////////////////////// //////////////////////////////////\n          // filter the array to bring brand_id distinct\n\n          var byRestaurantArray = _toConsumableArray(new Set(newArray.map(function (x) {\n            return x.nix_brand_id;\n          })));\n\n          var arrObj = []; // Goes through the array previously filtered and find it on the array previously filtered by calories\n\n          var _loop = function _loop(i) {\n            var item = byRestaurantArray[i];\n            var newObj = {\n              restaurant: {\n                restuarantId: item,\n                restaurantName: '',\n                retaurantLat: '',\n                retaurantLng: '',\n                dishs: []\n              }\n            };\n            newArray.forEach(function (element) {\n              if (item === element.nix_brand_id) {\n                var dishObj = {\n                  food_id: element.nix_item_id,\n                  food_name: element.food_name,\n                  calories: element.nf_calories\n                };\n                newObj.restaurant.restaurantName = element.brand_name;\n                newObj.restaurant.dishs.push(dishObj);\n              }\n            });\n            arrObj.push(newObj);\n          };\n\n          for (var i = 0; i < byRestaurantArray.length; i++) {\n            _loop(i);\n          } // })\n\n\n          console.log('arrObj', arrObj);\n          console.log('byRestaurantArray', byRestaurantArray);\n          console.log('New Array', newArray); // //////////////////////////////////// //////////////////////////////////// //////////////////////////////////\n\n          that.setState({\n            restaurants: arrObj\n          }); // this.setState({\n          //   restaurants: newArray\n          // })\n\n          console.log(\"ResultFinal\", _this2.state.restaurants);\n        });\n      });\n    }\n  }, {\n    key: \"onChangeSelect\",\n    value: function onChangeSelect(result) {\n      this.setState({\n        querySearch: result.map(function (item) {\n          return item.value;\n        }).toString()\n      });\n    }\n  }, {\n    key: \"handleOnChangeCalories\",\n    value: function handleOnChangeCalories(event) {\n      console.log('HandleOnchange', event.target.value);\n      this.setState({\n        calories: event.target.value\n      });\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      }\n    }\n  }, {\n    key: \"showPosition\",\n    value: function showPosition(position) {\n      this.setState({\n        currentLocation: \"\".concat(position.coords.latitude, \",\").concat(position.coords.longitude),\n        myPlace: [{\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          zoom: 14\n        }]\n      });\n    }\n  }, {\n    key: \"locationClick\",\n    value: function locationClick(e) {\n      e.preventDefault();\n      this.setState({\n        currentLocation: '',\n        myPlace: [{\n          lat: '',\n          lng: '',\n          zoom: 4\n        }]\n      });\n      this.getLocation();\n    } // onChange event of location input\n\n  }, {\n    key: \"locationChange\",\n    value: function locationChange(result) {\n      console.log('locationChange', result.target.value);\n      this.setState({\n        location: result.target.value\n      });\n    } // Click event of the search buttton\n\n  }, {\n    key: \"locationSearchClick\",\n    value: function locationSearchClick(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(this.state.location !== \"\" ? this.state.location : \"NY\", \"&key=\").concat(googleInfo.key);\n      this.setState({\n        locationUrl: url\n      });\n      console.log(\"url\", url);\n      axios.get(url).then(function (result) {\n        _this3.setState({\n          myPlace: [{\n            lat: result.data.results[0].geometry.location.lat,\n            lng: result.data.results[0].geometry.location.lng,\n            name: result.data.results[0].formatted_address,\n            zoom: _this3.state.location === '' ? 12 : 14\n          }]\n        });\n      });\n    }\n  }, {\n    key: \"itemDetailsClick\",\n    value: function itemDetailsClick(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var itemId = event.target.getAttribute(\"data-itemId\");\n      console.log('Element', itemId);\n      API.getFoodItemByItemId(itemId.toString()).then(function (result) {\n        console.log(\"Result\", result);\n\n        _this4.setState({\n          foodInfo: result.data.foods[0],\n          modalShow: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"MainSearch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"MainSearch-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"txtSearch\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search by zip code, City or address\",\n        onChange: this.locationChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-ouline-light btn-sm btnLocation mainSearchButton\",\n        type: \"submit\",\n        onClick: this.locationClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"imgArrow\",\n        srcSet: \"././img/locationarrow.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        id: \"insert\",\n        onClick: this.locationSearchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '350px',\n          width: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.state.myPlace.map(function (place) {\n        return React.createElement(Map, {\n          lat: place.lat,\n          lng: place.lng,\n          name: place.name,\n          zoom: place.zoom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        });\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(MultiSelect, {\n        onChange: this.onChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(InputCalories, {\n        onChange: this.handleOnChangeCalories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(SearchButton, {\n        onClick: this.handleSearchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), this.state.restaurants.map(function (restaurant) {\n        return React.createElement(Restaurants, {\n          onClick: _this5.itemDetailsClick,\n          restaurantInfo: restaurant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        });\n      }))), React.createElement(FoodItemModal, {\n        foodInfo: this.state.foodInfo,\n        show: this.state.modalShow,\n        onHide: this.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ByCaloriesSearch;\n}(Component);\n\nexport default ByCaloriesSearch;","map":{"version":3,"sources":["/Users/camilo/Columbia/YOLO/client/src/components/ByCaloriesSearch/index.js"],"names":["React","Component","googleInfo","Restaurants","MultiSelect","SearchButton","InputCalories","FoodItemModal","Map","API","axios","ByCaloriesSearch","props","modalClose","setState","modalShow","handleSearchClick","bind","onChangeSelect","handleOnChangeCalories","locationClick","locationChange","locationSearchClick","showPosition","getLocation","itemDetailsClick","state","restaurants","foodInfo","querySearch","calories","location","currentLocation","locationUrl","key","myPlace","lat","lng","name","zoom","e","preventDefault","that","console","log","getRestaurants","then","arr","brandIdList","data","locations","map","brand_id","restaurantList","getRestaurantsByBrandId","result","newArray","branded","filter","item","nf_calories","byRestaurantArray","Set","x","nix_brand_id","arrObj","i","newObj","restaurant","restuarantId","restaurantName","retaurantLat","retaurantLng","dishs","forEach","element","dishObj","food_id","nix_item_id","food_name","brand_name","push","length","value","toString","event","target","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","get","results","geometry","formatted_address","itemId","getAttribute","getFoodItemByItemId","foods","height","width","place"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react'\nimport React, { Component } from 'react'\nimport './style.css';\nimport googleInfo from \"../../utils/google\"\nimport Restaurants from '../Restaurants'\nimport MultiSelect from '../MultiSelect'\nimport SearchButton from '../SearchButton'\nimport InputCalories from '../InputCalories'\nimport FoodItemModal from '../FoodItemModal'\nimport Map from '../Map'\nimport API from '../../utils/API'\nimport axios from 'axios'\n\n\nclass ByCaloriesSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.onChangeSelect = this.onChangeSelect.bind(this);\n    this.handleOnChangeCalories = this.handleOnChangeCalories.bind(this);\n    this.locationClick = this.locationClick.bind(this);\n    this.locationChange = this.locationChange.bind(this);\n    this.locationSearchClick = this.locationSearchClick.bind(this);\n    this.showPosition = this.showPosition.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.locationSearchClick = this.locationSearchClick.bind(this);\n    this.itemDetailsClick = this.itemDetailsClick.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n    this.state = {\n      modalShow: false,\n      restaurants: [],\n      foodInfo: {},\n      querySearch: \"\",\n      calories: 0,\n      location: '',\n      currentLocation: '',\n      locationUrl: `https://www.google.com/maps/embed/v1/place?q=NY&key=${googleInfo.key}`,\n      myPlace: [{\n        lat: 40.7127753,\n        lng: -74.0059728,\n        name: 'New York',\n        zoom: 12,\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      restaurants: [],\n      querySearch: '',\n      calories: 0,\n    })\n\n  }\n\n  handleSearchClick(e) {\n    e.preventDefault();\n    const that = this;\n    console.log('restaurantObject', this.state)\n    API.getRestaurants(this.state.myPlace[0].lat, this.state.myPlace[0].lng).then(arr => {\n\n      console.log(\"array\", arr)\n      var brandIdList = arr.data.locations.map(location => location.brand_id)\n      var restaurantList = arr.data.locations.map(location => {\n        return (\n          {\n            brand_id: location.brand_id,\n            lat: location.lat,\n            lng: location.lng,\n          })\n      })\n\n      console.log(\"Object\", brandIdList)\n      console.log(\"restaurantList\", restaurantList)\n\n      API.getRestaurantsByBrandId(brandIdList, this.state.querySearch).then(result => {\n        console.log(\"Result\", result)\n        // Filter array by calories entered by the user\n        const newArray = result.data.branded.filter(item => ((item.nf_calories >= this.state.calories - 200) && (item.nf_calories <= this.state.calories)))\n\n        // //////////////////////////////////// //////////////////////////////////// //////////////////////////////////\n        // filter the array to bring brand_id distinct\n        let byRestaurantArray = [...new Set(newArray.map(x => x.nix_brand_id))]\n        let arrObj = []\n\n        // Goes through the array previously filtered and find it on the array previously filtered by calories\n        for (let i = 0; i < byRestaurantArray.length; i++) {\n          const item = byRestaurantArray[i];\n          const newObj = {\n            restaurant: {\n              restuarantId: item,\n              restaurantName: '',\n              retaurantLat: '',\n              retaurantLng: '',\n              dishs: []\n            }\n          }\n          newArray.forEach(element => {\n            if (item === element.nix_brand_id) {\n\n              const dishObj = {\n                food_id: element.nix_item_id,\n                food_name: element.food_name,\n                calories: element.nf_calories\n              }\n              newObj.restaurant.restaurantName = element.brand_name\n              newObj.restaurant.dishs.push(dishObj)\n            }\n          })\n          arrObj.push(newObj);\n        }\n        // })\n\n        console.log('arrObj', arrObj)\n\n        console.log('byRestaurantArray', byRestaurantArray)\n\n\n\n        console.log('New Array', newArray)\n\n        // //////////////////////////////////// //////////////////////////////////// //////////////////////////////////\n\n        that.setState({\n          restaurants: arrObj\n        })\n        // this.setState({\n        //   restaurants: newArray\n        // })\n        console.log(\"ResultFinal\", this.state.restaurants)\n      })\n    })\n  }\n\n  onChangeSelect(result) {\n    this.setState({\n      querySearch: result.map(item => item.value).toString(),\n    });\n  }\n\n  handleOnChangeCalories(event) {\n    console.log('HandleOnchange', event.target.value)\n    this.setState({\n      calories: event.target.value\n    })\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.showPosition);\n    }\n\n  }\n\n  showPosition(position) {\n    this.setState({\n      currentLocation: `${position.coords.latitude},${position.coords.longitude}`,\n      myPlace: [{\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        zoom: 14,\n      }]\n    })\n  }\n\n  locationClick(e) {\n    e.preventDefault();\n    this.setState({\n      currentLocation: '',\n      myPlace: [{\n        lat: '',\n        lng: '',\n        zoom: 4,\n      }]\n    })\n    this.getLocation();\n  }\n\n  // onChange event of location input\n  locationChange(result) {\n    console.log('locationChange', result.target.value)\n    this.setState({\n      location: result.target.value\n    })\n  }\n\n  // Click event of the search buttton\n  locationSearchClick(e) {\n    e.preventDefault();\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${this.state.location !== \"\" ? this.state.location : \"NY\"}&key=${googleInfo.key}`\n    this.setState({\n      locationUrl: url,\n    })\n    console.log(\"url\", url)\n    axios.get(url).then(result => {\n      this.setState({\n        myPlace: [{\n          lat: result.data.results[0].geometry.location.lat,\n          lng: result.data.results[0].geometry.location.lng,\n          name: result.data.results[0].formatted_address,\n          zoom: this.state.location === '' ? 12 : 14,\n        }]\n      })\n    })\n  }\n\n  itemDetailsClick(event) {\n    event.preventDefault();\n    const itemId = event.target.getAttribute(\"data-itemId\")\n    console.log('Element', itemId)\n\n    API.getFoodItemByItemId(itemId.toString()).then(result => {\n      console.log(\"Result\", result)\n\n      this.setState({\n        foodInfo: result.data.foods[0],\n        modalShow: true\n      })\n    })\n  }\n\n  modalClose = () => this.setState({ modalShow: false });\n\n  render() {\n    return (\n      <div className=\"MainSearch\">\n        <header className=\"MainSearch-header\">\n          <div>\n            <div className=\"input-group mb-3\">\n              <input id=\"txtSearch\" type=\"text\" className=\"form-control\" placeholder=\"Search by zip code, City or address\" onChange={this.locationChange} required />\n              <div className=\"input-group-append\">\n                <button className=\"btn-ouline-light btn-sm btnLocation mainSearchButton\" type=\"submit\" onClick={this.locationClick}><img className=\"imgArrow\" srcSet='././img/locationarrow.png' alt=\"\"></img></button>\n                <button className=\"btn btn-primary\" type=\"submit\" id=\"insert\" onClick={this.locationSearchClick}>Search</button>\n              </div>\n            </div>\n            <div className=\"row\">\n            <div className='col-6'>\n              <div style={{ height: '350px', width: '500px' }}>\n                {this.state.myPlace.map(place => <Map lat={place.lat} lng={place.lng} name={place.name} zoom={place.zoom}></Map>)}\n              </div>\n            </div>\n            </div>\n            <br></br>\n            <div className='row'>\n              <div className='col-6'>\n                <MultiSelect onChange={this.onChangeSelect}></MultiSelect>\n              </div>\n              <div className='col-4'>\n                <InputCalories onChange={this.handleOnChangeCalories}></InputCalories>\n              </div>\n              <div className='col-2'>\n                <SearchButton onClick={this.handleSearchClick}></SearchButton>\n              </div>\n            </div>\n            <br></br>\n            {this.state.restaurants.map(restaurant => <Restaurants onClick={this.itemDetailsClick} restaurantInfo={restaurant} />)}\n          </div>\n        </header>\n      <FoodItemModal\n        foodInfo={this.state.foodInfo}\n        show={this.state.modalShow}\n        onHide={this.modalClose}\n      />\n      </div >\n    );\n  }\n}\n\nexport default ByCaloriesSearch;\n"]},"metadata":{},"sourceType":"module"}