{"ast":null,"code":"import _objectSpread from \"/Users/camilo/Columbia/YOLO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/camilo/Columbia/YOLO/client/src/components/MultiSelect/index.js\";\nimport React from 'react';\nimport chroma from 'chroma-js';\nimport { foods } from './data';\nimport Select from 'react-select';\nvar colourStyles = {\n  control: function control(styles) {\n    return _objectSpread({}, styles, {\n      backgroundColor: 'white',\n      minWidth: '100px'\n    });\n  },\n  option: function option(styles, _ref) {\n    var data = _ref.data,\n        isDisabled = _ref.isDisabled,\n        isFocused = _ref.isFocused,\n        isSelected = _ref.isSelected;\n    var color = chroma(data.color);\n    return _objectSpread({}, styles, {\n      backgroundColor: isDisabled ? null : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\n      color: isDisabled ? '#ccc' : isSelected ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black' : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      ':active': _objectSpread({}, styles[':active'], {\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css())\n      })\n    });\n  },\n  multiValue: function multiValue(styles, _ref2) {\n    var data = _ref2.data;\n    var color = chroma(data.color);\n    return _objectSpread({}, styles, {\n      backgroundColor: color.alpha(0.1).css()\n    });\n  },\n  multiValueLabel: function multiValueLabel(styles, _ref3) {\n    var data = _ref3.data;\n    return _objectSpread({}, styles, {\n      color: data.color\n    });\n  },\n  multiValueRemove: function multiValueRemove(styles, _ref4) {\n    var data = _ref4.data;\n    return _objectSpread({}, styles, {\n      color: data.color,\n      ':hover': {\n        backgroundColor: data.color,\n        color: 'white'\n      }\n    });\n  }\n};\nexport default (function (props) {\n  return React.createElement(Select, {\n    closeMenuOnSelect: false,\n    defaultValue: [],\n    isMulti: true,\n    onChange: props.onChange,\n    options: foods.sort(function (a, b) {\n      return a.value.localeCompare(b.value);\n    }),\n    styles: colourStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/Users/camilo/Columbia/YOLO/client/src/components/MultiSelect/index.js"],"names":["React","chroma","foods","Select","colourStyles","control","styles","backgroundColor","minWidth","option","data","isDisabled","isFocused","isSelected","color","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","props","onChange","sort","a","b","value","localeCompare"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,YAAY,GAAG;AAEnBC,EAAAA,OAAO,EAAE,iBAAAC,MAAM;AAAA,6BAAUA,MAAV;AAAkBC,MAAAA,eAAe,EAAE,OAAnC;AAA6CC,MAAAA,QAAQ,EAAE;AAAvD;AAAA,GAFI;AAGnBC,EAAAA,MAAM,EAAE,gBAACH,MAAD,QAAyD;AAAA,QAA9CI,IAA8C,QAA9CA,IAA8C;AAAA,QAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;AAC/D,QAAMC,KAAK,GAAGb,MAAM,CAACS,IAAI,CAACI,KAAN,CAApB;AACA,6BACKR,MADL;AAEEC,MAAAA,eAAe,EAAEI,UAAU,GACvB,IADuB,GAEvBE,UAAU,GACVH,IAAI,CAACI,KADK,GAEVF,SAAS,GACTE,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EADS,GAET,IARN;AASEF,MAAAA,KAAK,EAAEH,UAAU,GACb,MADa,GAEbE,UAAU,GACVZ,MAAM,CAACgB,QAAP,CAAgBH,KAAhB,EAAuB,OAAvB,IAAkC,CAAlC,GACE,OADF,GAEE,OAHQ,GAIVJ,IAAI,CAACI,KAfX;AAgBEI,MAAAA,MAAM,EAAEP,UAAU,GAAG,aAAH,GAAmB,SAhBvC;AAkBE,mCACKL,MAAM,CAAC,SAAD,CADX;AAEEC,QAAAA,eAAe,EAAE,CAACI,UAAD,KAAgBE,UAAU,GAAGH,IAAI,CAACI,KAAR,GAAgBA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAA1C;AAFnB;AAlBF;AAuBD,GA5BkB;AA6BnBG,EAAAA,UAAU,EAAE,oBAACb,MAAD,SAAsB;AAAA,QAAXI,IAAW,SAAXA,IAAW;AAChC,QAAMI,KAAK,GAAGb,MAAM,CAACS,IAAI,CAACI,KAAN,CAApB;AACA,6BACKR,MADL;AAEEC,MAAAA,eAAe,EAAEO,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAFnB;AAID,GAnCkB;AAoCnBI,EAAAA,eAAe,EAAE,yBAACd,MAAD;AAAA,QAAWI,IAAX,SAAWA,IAAX;AAAA,6BACZJ,MADY;AAEfQ,MAAAA,KAAK,EAAEJ,IAAI,CAACI;AAFG;AAAA,GApCE;AAwCnBO,EAAAA,gBAAgB,EAAE,0BAACf,MAAD;AAAA,QAAWI,IAAX,SAAWA,IAAX;AAAA,6BACbJ,MADa;AAEhBQ,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFI;AAGhB,gBAAU;AACRP,QAAAA,eAAe,EAAEG,IAAI,CAACI,KADd;AAERA,QAAAA,KAAK,EAAE;AAFC;AAHM;AAAA;AAxCC,CAArB;AAkDA,gBAAe,UAACQ,KAAD;AAAA,SACb,oBAAC,MAAD;AACE,IAAA,iBAAiB,EAAE,KADrB;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAJlB;AAKE,IAAA,OAAO,EAAErB,KAAK,CAACsB,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBF,CAAC,CAACC,KAAxB,CAAV;AAAA,KAAX,CALX;AAME,IAAA,MAAM,EAAEvB,YANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa;AAAA,CAAf","sourcesContent":["import React from 'react';\nimport chroma from 'chroma-js';\n\nimport { foods } from './data';\nimport Select from 'react-select';\n\nconst colourStyles = {\n    \n  control: styles => ({ ...styles, backgroundColor: 'white' , minWidth: '100px'}),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css(),\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    ':hover': {\n      backgroundColor: data.color,\n      color: 'white',\n    },\n  }),\n};\n\nexport default (props) => (\n  <Select\n    closeMenuOnSelect={false}\n    defaultValue={[]}\n    isMulti\n    onChange={props.onChange}\n    options={foods.sort((a, b) => a.value.localeCompare(b.value))}\n    styles={colourStyles}\n  />\n);"]},"metadata":{},"sourceType":"module"}