{"ast":null,"code":"// import React from 'React'\nimport axios from \"axios\";\nimport ajax from 'ajax'; // axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\nvar credentials = {\n  // Alan\n  // 'x-app-id': 'a49cbcf2',\n  // 'x-app-key': '8fbb4486f5134e84e81d6f3918835982'\n  // Camilo\n  // 'x-app-id': '7af0b356',\n  // 'x-app-key': '59c8379f40e5797d62d756d0b858bc5b',\n  // 'x-app-key': '6dd125bab9d995bde5f71cc6399ddbd8'\n  // Rob\n  'x-app-id': 'e0a12c3e',\n  'x-app-key': 'ecea00b679c66c1d11b141d4833d152d'\n};\nexport default {\n  // Get restaurants based on geolocation\n  getRestaurants: function getRestaurants(lat, lng) {\n    var config = {\n      headers: Object.assign({}, credentials),\n      url: \"https://trackapi.nutritionix.com/v2/locations\",\n      method: 'GET',\n      contentType: 'application/json',\n      params: {\n        ll: \"\".concat(lat, \",\").concat(lng),\n        distance: '5mi',\n        limit: 50\n      }\n    };\n    return axios(config);\n  },\n  getRestaurantsByBrandId: function getRestaurantsByBrandId(brandIds, querySearch) {\n    var config = {\n      headers: Object.assign({}, credentials),\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\n      method: 'GET',\n      contentType: 'application/json',\n      params: {\n        query: querySearch,\n        branded: true,\n        self: false,\n        common: false,\n        brand_ids: brandIds,\n        branded_region: 1\n      }\n    };\n    return axios(config);\n  },\n  getFoodItemByItemId: function getFoodItemByItemId(itemId) {\n    var config = {\n      headers: Object.assign({}, credentials),\n      url: \"https://trackapi.nutritionix.com/v2/search/item?nix_item_id=\".concat(itemId),\n      // nix_item_id: itemId,\n      upc: 0,\n      claims: true,\n      method: 'GET',\n      contentType: 'application/json'\n    };\n    return axios(config);\n  },\n  getFoodByQuery: function getFoodByQuery(query) {\n    // We have to add this url before to avoid the CROS policy issues\n    var preUrl = 'https://cors-anywhere.herokuapp.com/';\n    var config = {\n      headers: Object.assign({}, credentials),\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\n      // nix_item_id: itemId,\n      line_delimited: false,\n      query: \"burger\",\n      params: {\n        query: query,\n        branded: true,\n        self: false,\n        common: false,\n        // brand_ids: brandIds,\n        branded_region: 1\n      },\n      // timezone: \"America/New_York\",\n      // use_branded_foods: false,\n      // use_raw_foods: false,\n      method: 'GET',\n      contentType: 'application/json'\n    };\n    return axios(config);\n  }\n};","map":{"version":3,"sources":["/Users/camilo/Columbia/YOLO/client/src/utils/API.js"],"names":["axios","ajax","credentials","getRestaurants","lat","lng","config","headers","Object","assign","url","method","contentType","params","ll","distance","limit","getRestaurantsByBrandId","brandIds","querySearch","query","branded","self","common","brand_ids","branded_region","getFoodItemByItemId","itemId","upc","claims","getFoodByQuery","preUrl","line_delimited"],"mappings":"AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AAEA,IAAMC,WAAW,GAAG;AAEhB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,cAAY,UAZI;AAahB,eAAa;AAbG,CAApB;AAgBA,eAAe;AACX;AACAC,EAAAA,cAAc,EAAE,wBAACC,GAAD,EAAMC,GAAN,EAAc;AAG1B,QAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,WAAlB,CADE;AAEXQ,MAAAA,GAAG,EAAE,+CAFM;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,WAAW,EAAE,kBAJF;AAKXC,MAAAA,MAAM,EAAE;AACJC,QAAAA,EAAE,YAAKV,GAAL,cAAYC,GAAZ,CADE;AAEJU,QAAAA,QAAQ,EAAE,KAFN;AAGJC,QAAAA,KAAK,EAAE;AAHH;AALG,KAAf;AAYA,WAAOhB,KAAK,CAACM,MAAD,CAAZ;AACH,GAlBU;AAqBXW,EAAAA,uBAAuB,EAAE,iCAACC,QAAD,EAAWC,WAAX,EAA2B;AAGhD,QAAMb,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,WAAlB,CADE;AAEXQ,MAAAA,GAAG,EAAE,oDAFM;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,WAAW,EAAE,kBAJF;AAKXC,MAAAA,MAAM,EAAE;AACJO,QAAAA,KAAK,EAAED,WADH;AAEJE,QAAAA,OAAO,EAAE,IAFL;AAGJC,QAAAA,IAAI,EAAE,KAHF;AAIJC,QAAAA,MAAM,EAAE,KAJJ;AAKJC,QAAAA,SAAS,EAAEN,QALP;AAMJO,QAAAA,cAAc,EAAE;AANZ;AALG,KAAf;AAeA,WAAOzB,KAAK,CAACM,MAAD,CAAZ;AACH,GAxCU;AA0CXoB,EAAAA,mBAAmB,EAAE,6BAACC,MAAD,EAAY;AAE7B,QAAMrB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,WAAlB,CADE;AAEXQ,MAAAA,GAAG,wEAAiEiB,MAAjE,CAFQ;AAGX;AACAC,MAAAA,GAAG,EAAE,CAJM;AAKXC,MAAAA,MAAM,EAAE,IALG;AAMXlB,MAAAA,MAAM,EAAE,KANG;AAOXC,MAAAA,WAAW,EAAE;AAPF,KAAf;AAUA,WAAOZ,KAAK,CAACM,MAAD,CAAZ;AACH,GAvDU;AAyDXwB,EAAAA,cAAc,EAAE,wBAACV,KAAD,EAAW;AACvB;AACA,QAAMW,MAAM,GAAG,sCAAf;AAEA,QAAMzB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,WAAlB,CADE;AAEXQ,MAAAA,GAAG,sDAFQ;AAGX;AACAsB,MAAAA,cAAc,EAAE,KAJL;AAKXZ,MAAAA,KAAK,EAAE,QALI;AAMXP,MAAAA,MAAM,EAAE;AACJO,QAAAA,KAAK,EAAEA,KADH;AAEJC,QAAAA,OAAO,EAAE,IAFL;AAGJC,QAAAA,IAAI,EAAE,KAHF;AAIJC,QAAAA,MAAM,EAAE,KAJJ;AAKJ;AACAE,QAAAA,cAAc,EAAE;AANZ,OANG;AAcX;AACA;AACA;AACAd,MAAAA,MAAM,EAAE,KAjBG;AAkBXC,MAAAA,WAAW,EAAE;AAlBF,KAAf;AAqBA,WAAOZ,KAAK,CAACM,MAAD,CAAZ;AAEH;AApFU,CAAf","sourcesContent":["\n// import React from 'React'\nimport axios from \"axios\";\nimport ajax from 'ajax'\n// axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\nconst credentials = {\n\n    // Alan\n    // 'x-app-id': 'a49cbcf2',\n    // 'x-app-key': '8fbb4486f5134e84e81d6f3918835982'\n\n    // Camilo\n    // 'x-app-id': '7af0b356',\n    // 'x-app-key': '59c8379f40e5797d62d756d0b858bc5b',\n    // 'x-app-key': '6dd125bab9d995bde5f71cc6399ddbd8'\n\n    // Rob\n    'x-app-id': 'e0a12c3e',\n    'x-app-key': 'ecea00b679c66c1d11b141d4833d152d',\n}\n\nexport default {\n    // Get restaurants based on geolocation\n    getRestaurants: (lat, lng) => {\n\n\n        const config = {\n            headers: Object.assign({}, credentials),\n            url: \"https://trackapi.nutritionix.com/v2/locations\",\n            method: 'GET',\n            contentType: 'application/json',\n            params: {\n                ll: `${lat},${lng}`,\n                distance: '5mi',\n                limit: 50\n            }\n        }\n\n        return axios(config)\n    },\n\n\n    getRestaurantsByBrandId: (brandIds, querySearch) => {\n\n\n        const config = {\n            headers: Object.assign({}, credentials),\n            url: \"https://trackapi.nutritionix.com/v2/search/instant\",\n            method: 'GET',\n            contentType: 'application/json',\n            params: {\n                query: querySearch,\n                branded: true,\n                self: false,\n                common: false,\n                brand_ids: brandIds,\n                branded_region: 1,\n            }\n        }\n\n        return axios(config)\n    },\n\n    getFoodItemByItemId: (itemId) => {\n\n        const config = {\n            headers: Object.assign({}, credentials),\n            url: `https://trackapi.nutritionix.com/v2/search/item?nix_item_id=${itemId}`,\n            // nix_item_id: itemId,\n            upc: 0,\n            claims: true,\n            method: 'GET',\n            contentType: 'application/json',\n        }\n\n        return axios(config)\n    },\n\n    getFoodByQuery: (query) => {\n        // We have to add this url before to avoid the CROS policy issues\n        const preUrl = 'https://cors-anywhere.herokuapp.com/'\n\n        const config = {\n            headers: Object.assign({}, credentials),\n            url: `https://trackapi.nutritionix.com/v2/search/instant`,\n            // nix_item_id: itemId,\n            line_delimited: false,\n            query: \"burger\",\n            params: {\n                query: query,\n                branded: true,\n                self: false,\n                common: false,\n                // brand_ids: brandIds,\n                branded_region: 1,\n            },\n            // timezone: \"America/New_York\",\n            // use_branded_foods: false,\n            // use_raw_foods: false,\n            method: 'GET',\n            contentType: 'application/json',\n        }\n\n        return axios(config)\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}